How did viewing a diff between two versions of a file help you see the bug that was introduced?
Using the diff tool allowed the computer to automatically pinpoint where the difference in two
files was. This mreduces the effort needed to scan through the entire file.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Having access to a file history allows you to see the changes you have made to a file. This, alone with the diff
tools, allows you to quickly pinpoint each change that has been made, when tracking down a bug, or trying to 
determine what caused a new behavior. It also allows you to revert to an earlier version easily in the event of a 
major issue.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
The pro is that you are in control, and you can make your commits logical, and make sure that each version is complete and compiles. The cons are that you have to be
disciplined, remember to commit often, and use your judgement on how large a commit should be. If you forget to commit for a while, git won't save you, and your versions
might be too big to be useful.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Depending on what you are working on, you may need to track files together. Code for instance, oftne relies o multiple files working together. While documents
created in Google Documents are usually separate entities with no dependencies.

How can you use the commands git log and git diff to view the history of files?
YOu can use git log to see the history of different commits made to a files or a group of files. You can then use git diff to see the actual changes made in 
each commit.

How might using version control make you more confident to make changes that could break something?
If your change breaks something, you can easily revert back to an older version in which things worked correctly.

Now that you have your workspace set up, what do you want to try using Git for?
Using version control on the android app I want to make.